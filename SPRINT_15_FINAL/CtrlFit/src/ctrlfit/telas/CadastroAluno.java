package ctrlfit.telas;

import ctrlfit.conexao.AlunoDAO;
import ctrlfit.entity.Aluno;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class CadastroAluno extends javax.swing.JFrame {

    private GerenciamentoAlunos gerenciamentoAlunos;
    private boolean modoAlterar = false;//variavel do tipo boolean, se o usuario clicar em exibir ela é alterar para verdadeiro
    private int matriculaAtual;
    GerenciamentoPagamentos gerenciamentoPagamentos = new GerenciamentoPagamentos();

    //construtor que recebe como parametro a tela de gerenciamento de alunos
    public CadastroAluno(GerenciamentoAlunos objGerenciamentoAlunos) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/ctrlfit/icons/logo_haltere2.png")));//icone da janela
        this.gerenciamentoAlunos = objGerenciamentoAlunos;
    }

    //construtor para exibir aluno
    public CadastroAluno(GerenciamentoAlunos objGerenciamentoAlunos, Aluno objAluno) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/ctrlfit/icons/logo_haltere2.png")));//icone da janela
        this.gerenciamentoAlunos = objGerenciamentoAlunos;
        
        modoAlterar = true;
        this.matriculaAtual = objAluno.getMatricula();

        txtMatriculaAluno.setText(String.valueOf(objAluno.getMatricula()));
        txtCpfAluno.setText(objAluno.getCpf());
        txtNomeAluno.setText(objAluno.getNome());

        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy"); // Definindo o formato desejado
        txtDtNascimentoAluno.setText(formato.format(objAluno.getDtNascimento())); // Formatando a data e definindo o texto no JTextField

        int aux;
        if (objAluno.getSexo() == 'M') {
            aux = 0;
        } else if (objAluno.getSexo() == 'F') {
            aux = 1;
        } else {
            aux = 2;
        }
        jComboBoxSexoAluno.setSelectedIndex(aux);

        txtEndereco.setText(objAluno.getEndereco());
        txtBairro.setText(objAluno.getBairro());
        txtCep.setText(objAluno.getCep());
        txtTelefone.setText(objAluno.getTelefone());
        txtCelular.setText(objAluno.getCelular());
        txtEmail.setText(objAluno.getEmail());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNomeAluno = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMatriculaAluno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnConfirmarAluno = new javax.swing.JButton();
        btnCancelarAluno = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtCpfAluno = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxSexoAluno = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtCelular = new javax.swing.JFormattedTextField();
        txtDtNascimentoAluno = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        txtCep = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Aluno");
        setResizable(false);

        jLabel1.setText("* Nome:");

        jLabel2.setText("* Endereço:");

        jLabel3.setText("Matrícula:");

        txtMatriculaAluno.setEditable(false);
        txtMatriculaAluno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMatriculaAluno.setFocusable(false);

        jLabel5.setText("* Bairro:");

        jLabel6.setText("* Sexo: ");

        jLabel7.setText("Telefone:");

        jLabel8.setText("* Celular:");

        jLabel9.setText("Email:");

        jLabel10.setText("* CEP:");

        btnConfirmarAluno.setText("Confirmar");
        btnConfirmarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarAlunoActionPerformed(evt);
            }
        });

        btnCancelarAluno.setText("Cancelar");
        btnCancelarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarAlunoActionPerformed(evt);
            }
        });

        jLabel12.setText("* CPF:");

        try {
            txtCpfAluno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ctrlfit/icons/foto_aluno.png"))); // NOI18N
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jComboBoxSexoAluno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F", "O" }));

        jLabel13.setText("* Data de Nascimento:");

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtDtNascimentoAluno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel4.setText("Campos com asterisco (*) são de preenchimento obrigatório");

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNomeAluno)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtMatriculaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCpfAluno))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel10))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCep)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtEndereco)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtTelefone)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtEmail)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(txtDtNascimentoAluno, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(8, 8, 8)
                                .addComponent(jComboBoxSexoAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirmarAluno)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelarAluno)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMatriculaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(txtCpfAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNomeAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBoxSexoAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(txtDtNascimentoAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5)
                            .addComponent(txtBairro)
                            .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmarAluno)
                    .addComponent(btnCancelarAluno)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarAlunoActionPerformed
        String cpf, nome, endereco, cep, bairro, telefone, celular, email;
        Date dtNascimento = null;
        char sexo = ' ';

        cpf = txtCpfAluno.getText();
        nome = txtNomeAluno.getText();
        endereco = txtEndereco.getText();
        cep = txtCep.getText();
        bairro = txtBairro.getText();
        telefone = txtTelefone.getText();
        celular = txtCelular.getText();
        email = txtEmail.getText();

        if (jComboBoxSexoAluno.getSelectedIndex() == 0) {
            sexo = 'M';
        } else if (jComboBoxSexoAluno.getSelectedIndex() == 1) {
            sexo = 'F';
        } else {
            sexo = 'O';
        }
        
        String cpfVazio = "   .   .   -  ";
        String cepVazio = "     -   ";
        String celularVazio = "(  )     -    ";

        // Verificar se os campos estão vazios
        if (cpf.equals(cpfVazio) || nome.isEmpty() || endereco.isEmpty() || cep.equals(cepVazio) || bairro.isEmpty()  || celular.equals(celularVazio)) {
            JOptionPane.showMessageDialog(null, "Preencha os campos obrigatórios.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return; // Interromper o fluxo se os campos estiverem vazios
        }

        //pegando a data digitada
        try {
            // Defina o formato da data que você deseja receber
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

            // Defina que o formato não deve permitir datas inválidas (como 32/13/2023)
            formato.setLenient(false);

            // Converta o texto para o objeto Date
            dtNascimento = formato.parse(txtDtNascimentoAluno.getText());
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Formato de data inválido.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Aluno objAluno = new Aluno(matriculaAtual, cpf, nome, dtNascimento, sexo, endereco, bairro, cep, telefone, celular, email);

        AlunoDAO objAlunoDao = new AlunoDAO();

        //boolean cpfCadastrado = objAlunoDao.verificarCpf(objAluno);
        if (modoAlterar) {
            objAluno.setMatricula(matriculaAtual);

            if (objAlunoDao.verificarCpf(objAluno, modoAlterar)) {
                JOptionPane.showMessageDialog(null, "O CPF " + objAluno.getCpf() + " já está cadastrado no sistema.", "Aviso", JOptionPane.WARNING_MESSAGE);

            } else {
                objAlunoDao.alterarAluno(objAluno);
                dispose();
                gerenciamentoAlunos.carregarDadosAlunos();
            }

        } else {

            if (objAlunoDao.verificarCpf(objAluno, modoAlterar)) {
                JOptionPane.showMessageDialog(null, "O CPF " + objAluno.getCpf() + " já está cadastrado no sistema.", "Aviso", JOptionPane.WARNING_MESSAGE);
            } else {
                objAlunoDao.cadastrarAluno(objAluno);

                txtMatriculaAluno.setText(String.valueOf(objAluno.getMatricula()));

                Object[] opcoes = {"Sim", "Não"};
                int resposta = JOptionPane.showOptionDialog(
                        this,
                        "Você deseja registrar o pagamento para esse aluno(a) agora?",
                        "Confirmação",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null, // Ícone padrão
                        opcoes, // Opções de botões personalizadas
                        opcoes[0] // Opção padrão selecionada
                );

                if (resposta == JOptionPane.YES_OPTION) {
                    CadastroPagamento pagamento = new CadastroPagamento(gerenciamentoPagamentos, gerenciamentoAlunos, objAluno.getMatricula(), objAluno.getNome());
                    pagamento.setVisible(true);
                }

                dispose();
                gerenciamentoAlunos.carregarDadosAlunos();
            }
        }
    }//GEN-LAST:event_btnConfirmarAlunoActionPerformed

    private void btnCancelarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarAlunoActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarAlunoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarAluno;
    private javax.swing.JButton btnConfirmarAluno;
    private javax.swing.JComboBox<String> jComboBoxSexoAluno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCelular;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JFormattedTextField txtCpfAluno;
    private javax.swing.JFormattedTextField txtDtNascimentoAluno;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtMatriculaAluno;
    private javax.swing.JTextField txtNomeAluno;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

}
